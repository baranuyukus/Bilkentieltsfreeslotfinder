import requests
import time
import json

# Telegram Bot Information (replace with your actual credentials)
TELEGRAM_BOT_TOKEN = "7261514373:AAE83wjAnncKJEju4f9fM6DPwchqmzdwzZU"
CHAT_ID = "-1002181084335"

url = "https://ielts.idp.com/book/Json/FindAvailableTestSessionForNewBooking"

payload = {
    "testSessionFromDate": "2024-Aug-01",
    "testSessionToDate": "2024-Nov-30",
    "testVenueId": 179,
    "testCentreId": 11995,
    "testModules": [1, 7],
    "testFormatId": 1,
    "specialNeedId": "",
    "isSelt": False,
    "token": None
}

headers = {
    "Content-Type": "application/json"
}


def send_telegram_message(message):
    """Sends a message to the specified Telegram channel."""
    telegram_api_url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    data = {"chat_id": CHAT_ID, "text": message}
    try:
        response = requests.post(telegram_api_url, json=data)
        response.raise_for_status()  # Raise an exception for non-200 status codes
        print(f"Sent message to Telegram successfully: {message}")
    except requests.exceptions.RequestException as e:
        print(f"Error sending Telegram message: {e}")

send_telegram_message("BOT ÇALIŞIYOR")
def check_availability():
    response = requests.post(url, headers=headers, json=payload)
    if response.status_code == 200:
        data = response.json()
        if data:
            message = "Available dates with slots:\n"
            for date in data.keys():
                if "Aug" in date or "Sep" in date or "Nov" in date:
                    message += f"  - Date: {date}\n"
            send_telegram_message(message)
        else:
            print("slot yok")
    else:
        print(f"Failed to retrieve data, status code: {response.status_code}")


while True:
    check_availability()
    time.sleep(120)  # Check every 5 minutes (300 seconds)
